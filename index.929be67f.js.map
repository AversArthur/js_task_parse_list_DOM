{"mappings":"ACEA,IAAM,EAAe,SAAS,aAAa,CAAC,MACxC,EAAQ,EAAE,CAad,SAAS,IACP,EAAa,SAAS,CAAG,GAEzB,EAAM,OAAO,CAAC,SAAC,CAAf,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,WAAW,CAAG,EAAS,IAAI,CAC9B,EAAG,OAAO,CAAC,QAAQ,CAAG,EAAS,QAAQ,CACvC,EAAG,OAAO,CAAC,MAAM,CAAI,IAAoC,MAAA,CAAjC,EAAS,MAAM,CAAC,cAAc,IACtD,EAAG,OAAO,CAAC,GAAG,CAAG,EAAS,GAAG,CAC7B,EAAa,WAAW,CAAC,EAC3B,EACF,CAvBA,SAAS,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAzC,EACE,IAAM,EAAO,CACX,KAAM,EAAG,WAAW,CAAC,IAAI,GACzB,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,OAAQ,WAAW,EAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,KACtD,IAAK,EAAG,OAAO,CAAC,GAAG,AACrB,EAEA,EAAM,IAAI,CAAC,EACb,GAiBE,EAAQ,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAAvB,EAA6B,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,A,GAChD,IAMA,EAAQ,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAAvB,EAA6B,OAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,C,GACxD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeeList = document.querySelector(\"ul\");\nvar names = [];\ndocument.querySelectorAll(\"li\").forEach(function(el) {\n    var data = {\n        name: el.textContent.trim(),\n        position: el.dataset.position,\n        salary: parseFloat(el.dataset.salary.replace(/[$,]/g, \"\")),\n        age: el.dataset.age\n    };\n    names.push(data);\n});\nfunction updateEmployeeList() {\n    employeeList.innerHTML = \"\";\n    names.forEach(function(employee) {\n        var li = document.createElement(\"li\");\n        li.textContent = employee.name;\n        li.dataset.position = employee.position;\n        li.dataset.salary = \"$\".concat(employee.salary.toLocaleString());\n        li.dataset.age = employee.age;\n        employeeList.appendChild(li);\n    });\n}\nfunction sortList() {\n    names = names.sort(function(a, b) {\n        return b.salary - a.salary;\n    });\n    updateEmployeeList();\n}\nsortList();\nfunction getEmployees() {\n    names = names.sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n    });\n    updateEmployeeList();\n}\ngetEmployees();\n\n//# sourceMappingURL=index.929be67f.js.map\n","'use strict';\n\nconst employeeList = document.querySelector('ul');\nlet names = [];\n\ndocument.querySelectorAll('li').forEach((el) => {\n  const data = {\n    name: el.textContent.trim(),\n    position: el.dataset.position,\n    salary: parseFloat(el.dataset.salary.replace(/[$,]/g, '')),\n    age: el.dataset.age,\n  };\n\n  names.push(data);\n});\n\nfunction updateEmployeeList() {\n  employeeList.innerHTML = '';\n\n  names.forEach((employee) => {\n    const li = document.createElement('li');\n\n    li.textContent = employee.name;\n    li.dataset.position = employee.position;\n    li.dataset.salary = `$${employee.salary.toLocaleString()}`;\n    li.dataset.age = employee.age;\n    employeeList.appendChild(li);\n  });\n}\n\nfunction sortList() {\n  names = names.sort((a, b) => b.salary - a.salary);\n  updateEmployeeList();\n}\n\nsortList();\n\nfunction getEmployees() {\n  names = names.sort((a, b) => a.name.localeCompare(b.name));\n  updateEmployeeList();\n}\n\ngetEmployees();\n"],"names":["employeeList","document","querySelector","names","updateEmployeeList","innerHTML","forEach","employee","li","createElement","textContent","name","dataset","position","salary","concat","toLocaleString","age","appendChild","querySelectorAll","el","data","trim","parseFloat","replace","push","sort","a","b","localeCompare"],"version":3,"file":"index.929be67f.js.map"}